{"version":3,"file":"bundle-filteringBuildings.js","mappings":";;;;;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN,yCAAyC,SAAS;AAClD;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB;AAClB,iEAAiE,SAAS;AAC1E;AACA,kBAAkB;AAClB,mDAAmD,gBAAgB,IAAI;AACvE;AACA,aAAa;AACb;AACA;AACA;AACA,yCAAyC,cAAc,IAAI;AAC3D,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC,sBAAsB,cAAc;AACpC,iGAAiG,QAAQ;AACzG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd,+CAA+C,gBAAgB,IAAI;AACnE;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,cAAc,IAAI;AACvD,SAAS;AACT,C","sources":["webpack://project/./src/main/js/filteringBuildings.js"],"sourcesContent":["const locationFilter = document.getElementById(\"locationFilter\");\nconst locationInput = document.getElementById(\"location\");\n\nconst tableBody = document.getElementById(\"tableBody\");\n\nlocationFilter.addEventListener(\"click\", locationFilterFunction);\n\nfunction locationFilterFunction(){\n    const location = locationInput.value;\n\n    if (location === \"\" ) {\n        getAllBuildings();\n    } else {\n        fetch(`/api/buildings?location=${location}`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else if (response.status === 204) {\n                    alert(`There is no building with location: ${location}`)\n                    return [];\n                } else {\n                    alert(`Received status code: ${response.status}`); // 'alert' is NOT DONE!\n                }\n            })\n            .then(buildings =>\n                processData(buildings))\n            .catch(error => {\n                alert(`Received error: ${error.message}`); // 'alert' is NOT DONE!\n            });\n    }\n}\n\nfunction processData(dataArray){\n    tableBody.innerHTML = \"\";\n\n    for (let data of dataArray) {\n        tableBody.innerHTML += `\n            <tr>\n                <td>${data.name}</td>\n                <td>${data.location}</td>\n                <td><a class=\"btn btn-outline-dark\" href=\"/buildings/buildingdetail?buildingID=${data.id}\">Building Detail</a></td>\n            </tr>\n        `;\n    }\n}\n\nfunction getAllBuildings(){\n    fetch(`/api/buildings/`, {\n        method: \"GET\",\n        headers : {\n            \"Content-Type\" : \"application/json\"\n        },\n    })\n        .then(response => {\n            if (response.status === 200){\n                return response.json();\n            } else if (response.status === 204){\n                alert(`There are no buildings in the database`)\n                return [];\n            } else {\n                alert(`Received status code: ${response.status}`); // 'alert' is NOT DONE!\n            }\n        })\n        .then(buildings =>\n            processData(buildings))\n        .catch(error => {\n            alert(`Received error: ${error.message}`); // 'alert' is NOT DONE!\n        })\n}"],"names":[],"sourceRoot":""}